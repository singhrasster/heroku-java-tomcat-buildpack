#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
echo "in compile file"
set -e
echo "in compile file 1"

logger -p user.notice -t "slugc[$$]" "language_pack_java java_compile_start"
echo "in compile file 2"

BIN_DIR=$(cd $(dirname $0); pwd) # absolute path
# parse args
BUILD_DIR=$1
CACHE_DIR=$2
LOGGER_FLAGS=""
echo "in compile file 3"

curl --silent --location http://heroku-jvm-common.s3.amazonaws.com/jvm-buildpack-common.tar.gz | tar xz
. bin/java

echo "in compile file 4"

KEEP_M2_CACHE="true"

# create default system.properties for apps that had the jdk vendored in 
if [ -f ${CACHE_DIR}/.jdk/vendor ] && [ ! -f ${BUILD_DIR}/system.properties ]; then
  echo "java.runtime.version=1.6" > ${BUILD_DIR}/system.properties
fi

echo "in compile file 5"

if [ -f ${CACHE_DIR}/system.properties ] && [ ! -f ${BUILD_DIR}/system.properties ]; then
  cp ${CACHE_DIR}/system.properties ${BUILD_DIR}/system.properties
fi

echo "in compile file 6"

if [ ! -d $CACHE_DIR ]; then
  LOGGER_FLAGS="$LOGGER_FLAGS new_java_app"
  logger -p user.notice -t "slugc[$$]" "language_pack_java new_java_app"
  KEEP_M2_CACHE="false"
  if [ ! -f ${BUILD_DIR}/system.properties ]; then 
    echo "java.runtime.version=1.6" > ${BUILD_DIR}/system.properties; 
  fi
elif [ -f $CACHE_DIR/removeM2Cache ]; then
  KEEP_M2_CACHE="false"
fi

echo "in compile file 7"

if [ "true" == $KEEP_M2_CACHE ]; then
  logger -p user.notice -t "slugc[$$]" "language_pack_java retain_m2_repo"
fi

echo "in compile file 8"

#create the cache dir if it doesn't exist
mkdir -p $CACHE_DIR

echo "in compile file 9"

# install JDK 
if [ -f ${BUILD_DIR}/system.properties ]; then
  logger -p user.notice -t "slugc[$$]" "language_pack_java download_jdk"
  LOGGER_FLAGS="$LOGGER_FLAGS download_jdk"
  javaVersion=$(detect_java_version ${BUILD_DIR})
  echo -n "-----> Installing OpenJDK ${javaVersion}..."
  install_java ${BUILD_DIR} ${javaVersion}
  jdk_overlay ${BUILD_DIR}
  echo "done"
  cp ${BUILD_DIR}/system.properties ${CACHE_DIR}/
fi

echo "in compile file 10"

# change to cache dir to install maven & tomcat
cd $CACHE_DIR

TOMCAT_URL="http://apache.petsads.us/tomcat/tomcat-7/v7.0.42/bin/apache-tomcat-7.0.42.tar.gz"
echo "in compile file 11"
if [ ! -d tomcat ]; then
  echo -n "-----> Installing Tomcat 7.0.42..."
  curl --silent --location $TOMCAT_URL | tar xz
  echo "in compile file 11...."
  mv apache-tomcat-7.0.42 $BUILD_DIR/tomcat
  echo "in compile file 11........"
  rm -rf $BUILD_DIR/tomcat/webapps/*
  echo "in compile file 11.........."
  chmod +x $BUILD_DIR/tomcat/bin/*.sh
  echo "in compile file 11............."
  echo " done"
else
  echo "-----> Tomcat already present"
fi
echo "in compile file 12"

# install maven with base repository
MAVEN_URL="http://s3.amazonaws.com/heroku-jvm-langpack-java/maven.tar.gz"

if [ ! -d .maven ]; then
  echo -n "-----> Installing Maven 3.0.3..."
  curl --silent --max-time 60 --location $MAVEN_URL | tar xz
  chmod +x .maven/bin/mvn
  echo " done"
fi
echo "in compile file 13"

MAVEN_SETTINGS_URL="http://ec2-54-234-232-155.compute-1.amazonaws.com/settings.xml"

echo -n "-----> Installing settings.xml..."
if [ -f .m2/settings.xml ]; then
  rm .m2/settings.xml 
fi
curl --silent --max-time 10 --location $MAVEN_SETTINGS_URL --output .m2/settings.xml
echo " done"

echo "in compile file 14"

# change to build dir to run maven
cd $BUILD_DIR

export MAVEN_OPTS="-Xmx512m"
echo "in compile file 15"

# build app
BUILDCMD="$CACHE_DIR/.maven/bin/mvn -B -Duser.home=$BUILD_DIR -Dmaven.repo.local=$CACHE_DIR/.m2/repository -s $CACHE_DIR/.m2/settings.xml -DskipTests=true clean install"
echo "-----> executing $BUILDCMD"

echo "in compile file 16."

$BUILDCMD 2>&1 | sed -u 's/^/       /'

echo "in compile file 16.1"

#if [ "${PIPESTATUS[*]}" != "0 0" ]; then
#  echo " !     Failed to build app with Maven"
#  exit 1
#fi

echo "in compile file 17"

# finalize cache
if [ "false" == $KEEP_M2_CACHE ]; then
  touch $CACHE_DIR/removeM2Cache
fi

echo "in compile file 18"

#copy .m2 and .maven if needed
if [ "true" == $KEEP_M2_CACHE ]; then
  for DIR in ".m2" ".maven" ; do
    cp -r $CACHE_DIR/$DIR $DIR
  done
fi

echo "in compile file 19"

logger -p user.notice -t "slugc[$$]" "language_pack_java java_compile_end $LOGGER_FLAGS"
echo "in compile file 20"